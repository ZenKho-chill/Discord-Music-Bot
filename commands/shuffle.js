/*
 * T·ªáp n√†y l√† m·ªôt ph·∫ßn c·ªßa Discord Music Bot.
 *
 * Discord Music Bot l√† ph·∫ßn m·ªÅm mi·ªÖn ph√≠: b·∫°n c√≥ th·ªÉ ph√¢n ph·ªëi l·∫°i ho·∫∑c s·ª≠a ƒë·ªïi
 * theo c√°c ƒëi·ªÅu kho·∫£n c·ªßa Gi·∫•y ph√©p C√¥ng c·ªông GNU ƒë∆∞·ª£c c√¥ng b·ªë b·ªüi
 * T·ªï ch·ª©c Ph·∫ßn m·ªÅm T·ª± do, phi√™n b·∫£n 3 ho·∫∑c (n·∫øu b·∫°n mu·ªën) b·∫•t k·ª≥ phi√™n b·∫£n n√†o sau ƒë√≥.
 *
 * Discord Music Bot ƒë∆∞·ª£c ph√¢n ph·ªëi v·ªõi hy v·ªçng r·∫±ng n√≥ s·∫Ω h·ªØu √≠ch,
 * nh∆∞ng KH√îNG C√ì B·∫¢O H√ÄNH; th·∫≠m ch√≠ kh√¥ng bao g·ªìm c·∫£ b·∫£o ƒë·∫£m
 * V·ªÄ T√çNH TH∆Ø∆†NG M·∫†I ho·∫∑c PH√ô H·ª¢P CHO M·ªòT M·ª§C ƒê√çCH C·ª§ TH·ªÇ. Xem
 * Gi·∫•y ph√©p C√¥ng c·ªông GNU ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.
 *
 * B·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m·ªôt b·∫£n sao c·ªßa Gi·∫•y ph√©p C√¥ng c·ªông GNU c√πng v·ªõi Discord Music Bot.
 * N·∫øu kh√¥ng, h√£y xem <https://www.gnu.org/licenses/>.
 */

const { EmbedBuilder } = require('discord.js');
const config = require('../config');
const db = require('../mongoDB');

module.exports = {
  name: 'shuffle',
  description: 'X√°o tr·ªôn dang s√°ch nh·∫°c trong h√†ng ch·ªù',
  options: [],
  permissions: '0x0000000000000800',
  run: async (client, interaction) => {
    try {
      const queue = client.player.getQueue(interaction.guild.id);

      if (!queue || !queue.playing) {
        return interaction.reply({ content: '‚ö†Ô∏è Kh√¥ng c√≥ nh·∫°c n√†o ƒëang ph√°t', ephemeral: true }).catch(e => { });
      }

      try {
        queue.shuffle();
        return interaction.reply({ content: `<@${interaction.user.id}>, ƒê√£ x√°o tr·ªôn danh s√°ch nh·∫°c cho b·∫°n!! üé∂` }).catch(e => { });
      } catch (err) {
        console.error('L·ªói khi x√°o tr·ªôn:', err);
        return interaction.reply({ content: `‚ùå L·ªói x·∫£y ra khi c·ªë g·∫Øng x√°o tr·ªôn nh·∫°c: **${err.message}**`, ephemeral: true }).catch(e => { });
      }
    } catch (e) {
      console.error(e);
      return interaction.reply({ content: '‚ùå ƒê√£ x·∫£y ra l·ªói kh√¥ng x√°c ƒë·ªãnh', ephemeral: true }).catch(e => { });
    }
  },
};